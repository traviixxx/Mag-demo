# Default values for magnolia-helm.
# Declare variables to be passed into your templates.

image:
  tomcat:
    # -- The tomcat image we're going to use.
    repository: tomcat
    # -- Tomcat repo tag.
    tag: 9.0-jre11-temurin
    # -- Tomcat repo pull policy.
    pullPolicy: IfNotPresent
  redirects:
    repository: registry.gitlab.com/mironet/redirects
    # -- Tomcat repo tag.
    tag: v0.3.1
    # -- Tomcat repo pull policy.
    pullPolicy: IfNotPresent
  pullSecrets: []
nameOverride: ""
fullnameOverride: ""

# -- Timezone for Magnolia.
timezone: Europe/Zurich

deploy:
  extraLibs: /usr/local/tomcat/lib2
  # -- Deploy into this directory innside the app server container.
  directory: /usr/local/tomcat/webapps
  tempDir: /usr/local/tomcat/temp
  securityContext:
    # -- Run application pod under this user ID. **Note:** Do not use a
    # privileged user here.
    runAsUser: 1000
    # -- Group ID.
    runAsGroup: 1000
    # -- Fixup file permissions for volumes mounted to the Magnolia pod.
    fsGroup: 1000

bootstrap:
  # -- Do enable bootstrapping via REST.
  enabled: True

# -- Shared database (jackrabbit "clustering").
# @default -- See values below ...
sharedDb:
  # -- Enable shared db
  enabled: false
  workspaces: []
  db:
    enabled: True
    repository: postgres
    tag: 11.5-alpine
    type: postgres
    name: cluster
    persistence:
      enabled: True
      size: 10Gi
      # accessModes:
      #   - ReadWriteOnce
      # -- Mount point is /db, PGDATA=/db/data
      mountPath: "/db"
      # -- Mount point is /db, PGDATA=/db/data
      subPath: "data"
    jackrabbit:
      # -- Errors detected by a consistency check are automatically repaired. If false, errors are only written to the log.
      autoRepair: True
      # -- If set to true a consistency check is performed depending on the parameter forceConsistencyCheck.
      # If set to false no consistency check is performed on startup, even if a redo log had been applied.
      enableConsistencyCheck: False
      # -- Runs a consistency check on every startup. If false, a consistency check is only performed when the search index detects a prior forced shutdown.
      forceConsistencyCheck: False
      # -- If set to log, the process will just log the inconsistency during the re-indexing on startup.
      # If set to fail, the process will fail the re-indexing on startup.
      onWorkspaceInconsistency: log
      # -- Extra search index parameters for jackrabbit configuration (e.g. overwrite
      # search excerpt provider class with `excerptProviderClass`)
      extraSearchIndexParameters: {}
    backup:
      enabled: False
      autoconfig:
        enabled: False
        extraEnv: []
      image: registry.gitlab.com/mironet/magnolia-backup
      tag: "v0.7.4"
      pg_wal_archive: "/archive"
      pg_wal_archive_size: "50Gi"
      env:
        - name: MGNLBACKUP_PG_DATA
          value: /db/data
        - name: MGNLBACKUP_USE_PG_WAL
          value: "true"
        - name: MGNLBACKUP_SYNC_DIR
          value: "/archive"
        - name: MGNLBACKUP_LOGLEVEL
          value: debug
        - name: MGNLBACKUP_BUCKET
          value: backup
        - name: MGNLBACKUP_PREFIX
          value: shareddb
        - name: MGNLBACKUP_HERITAGE
          value: magonlia-backup
        - name: MGNLBACKUP_CRON
          value: "@every 30d"
        - name: MGNLBACKUP_S3_ACCESSKEY
          valueFrom:
            secretKeyRef:
              name: s3-backup-key
              key: accesskey
        - name: MGNLBACKUP_S3_SECRETKEY
          valueFrom:
            secretKeyRef:
              name: s3-backup-key
              key: secretkey
        - name: MGNLBACKUP_S3_ENDPOINT
          value: minio:9000
        - name: MGNLBACKUP_CYCLE
          value: "90,0,0" # Use only days for WAL archiving.
    restore:
      # -- Enable restore operations.
      enabled: False
      # -- URL to backup bundle JSON file to use for restore.
      bundle_url: https://s3...
      # # where to get the dump from
      # dump_url: https://s3...
    # -- Custom annotations added to db pods.
    podAnnotations: {}
    contentsync:
      enabled: False
      # -- TLS port of the backup sidecar.
      address: ":9998"

# -- This is the author's configuration. It should not use H2 data base (the
# default).
# @default -- See values below ...
magnoliaAuthor:
  # -- If false, does not deploy the author instance.
  enabled: True
  restartPolicy: Always
  # -- If true, redeploy on "helm upgrade/install" even if no changes were made.
  redeploy: false
  # -- The context path of this Magnolia instance. Always use a leading slash.
  contextPath: /author
  webarchive:
    # -- The docker image where to fetch compiled Magnolia libs from.
    repository: registry.gitlab.com/mironet/magnolia-demo
    # -- Do not use 'latest' in production.
    tag: latest
  # -- Extra sidecar containers added to the Magnolia pod.
  extraContainers: []
  # -- Extra init containers added to the Magnolia pod.
  extraInitContainers: []
  # -- Enable Groovy rescue console.
  rescueMode: False
  rescueModeDX: False
  strategy:
    # -- Kubernetes rollout strategy on `helm upgrade ...`.
    type: Recreate
  # -- These key/value pairs will be added to CATALINA_OPTS.
  catalinaExtraEnv: {}
  setenv:
    memory:
      # -- Minimum amount allocated to heap as a percentage of the pod's
      # resources.
      minPercentage: 25
      # -- Maximum amount allocated to heap as a percentage of the pod's
      # resources.
      maxPercentage: 60
    update:
      # -- Auto-update Magnolia if repositories are empty (usually on the first
      # run).
      auto: "true"
  resources:
    requests:
      # -- Minimum amount of memory this pod requests.
      memory: 2Gi
    limits:
      # -- Maximum amount of memory this pod is allowed to use. This is not the
      # heap size, the heap size is smaller, see `setenv.memory` for details.
      memory: 2Gi
  logging:
    level: DEBUG
    pattern: "%d %-5p %-50.50c: %m%n"
  bootstrap:
    username: superuser
    password: ""
    # -- Verbatim content of the instructions for this instance. If empty use a
    # default. This is intended to be used with the --set-file flag of "helm
    # install".
    instructions: ""
    extraEnv: []
  activation:
    privateKey: null
    publicKey: null
    # -- Set this to `true` in case you want to use an existing activation key
    # stored as a secret and provide its name.
    useExistingSecret: False
    keyLocation: /keys/activation/magnolia-activation-keypair.properties
    secret:
      name: my-activation-secret
      key: my-activation-secret-key # The name of they inside the secret to use.
  persistence:
    # -- Enable persistence for indexes, cache, tmp files. If this is enabled
    # the MGNL_HOME_DIR env var will be set and a volume will be mounted to the
    # default location unless it's specified here as mountPath.
    enabled: True
    # -- Existing volumes can be mounted into the container. If not specified,
    # helm will create a new PVC.
    existingClaim:
    # -- In case of local-path provisioners this is not enforced.
    size: 10Gi
    mountPath: /mgnl-home
    # -- Empty string means: Use the default storage class.
    storageClassName: ""
  db:
    enabled: True
    repository: postgres
    tag: 11.9-alpine
    type: postgres
    name: author
    persistence:
      enabled: True
      size: 10Gi
      volumePermissions: true # Fix volume permissions by chowning pvc to RunAsUser:fsGroup.
      # -- Mount point is /db, PGDATA=/db/data
      mountPath: "/db"
      # -- Mount point is /db, PGDATA=/db/data
      subPath: "data"
    jackrabbit:
      # -- Errors detected by a consistency check are automatically repaired. If false, errors are only written to the log.
      autoRepair: True
      # -- If set to true a consistency check is performed depending on the parameter forceConsistencyCheck.
      # If set to false no consistency check is performed on startup, even if a redo log had been applied.
      enableConsistencyCheck: False
      # -- Runs a consistency check on every startup. If false, a consistency check is only performed when the search index detects a prior forced shutdown.
      forceConsistencyCheck: False
      # -- If set to log, the process will just log the inconsistency during the re-indexing on startup.
      # If set to fail, the process will fail the re-indexing on startup.
      onWorkspaceInconsistency: log
      # -- Extra search index parameters for jackrabbit configuration (e.g. overwrite
      # search excerpt provider class with `excerptProviderClass`)
      extraSearchIndexParameters: {}
    backup:
      # -- Enable db backup sidecar.
      enabled: False
      autoconfig:
        # -- Configures the backup for pg_wal automatically in a k8s
        # environment. It does this by including a configmap via the envFrom:
        # directive which will be injected into the pod. You can override or
        # pass other environment variables via the env: or the extraEnv:
        # directive below.
        enabled: False
        extraEnv: []
      image: "registry.gitlab.com/mironet/magnolia-backup"
      tag: "v0.7.4"
      pg_wal_archive: "/archive"
      pg_wal_archive_size: "50Gi"
      env:
      - name: MGNLBACKUP_PG_DATA
        value: /db/data
      - name: MGNLBACKUP_USE_PG_WAL
        value: "true"
      - name: MGNLBACKUP_SYNC_DIR
        value: "/archive"
      - name: MGNLBACKUP_LOGLEVEL
        value: "debug"
      - name: MGNLBACKUP_BUCKET
        value: "backup"
      - name: MGNLBACKUP_PREFIX
        value: "author"
      - name: MGNLBACKUP_HERITAGE
        value: "magnolia-backup"
      - name: MGNLBACKUP_CRON
        value: "@every 720h" # ~1 month.
      - name: MGNLBACKUP_S3_ACCESSKEY
        valueFrom:
          secretKeyRef:
            name: s3-backup-key
            key: accesskey
      - name: MGNLBACKUP_S3_SECRETKEY
        valueFrom:
          secretKeyRef:
            name: s3-backup-key
            key: secretkey
      - name: MGNLBACKUP_S3_ENDPOINT
        value: "minio:9000"
      - name: MGNLBACKUP_CYCLE
        value: "90,0,0" # Use only days for WAL archiving.
    restore:
      # -- Enable restore operations.
      enabled: False
      # -- URL to backup bundle JSON file to use for restore.
      bundle_url: https://s3...
      # # where to get the dump from
      # dump_url: https://s3...
    # -- Custom annotations added to db pods.
    podAnnotations: {}
    contentsync:
      enabled: false
      # -- TLS port of the backup sidecar.
      address: ":9998"
  livenessProbe:
    enabled: True
    failureThreshold: 4
    periodSeconds: 10
    expectedCodes: "200-399,401,404"
    path: "/.rest/status"
  # -- Custom annotations added to pod.
  podAnnotations: {}
  # -- Additional JDNI resources to be added in tomcat's `server.xml`. The
  # key/value pairs will be mapped to xml.
  jndiResources: []
  # -- Tomcat configuration
  tomcat:
    # -- Log JVM arguments
    logArgs: False
    # -- Activate the websockets
    activateWebsockets: False
    # -- The maximum permitted size of the request line and headers associated with an HTTP request and response
    maxHttpHeaderSize: 8192
    # -- Error valve configuration
    error:
      # -- Show error report
      showReport: False
      # -- Show server info
      showServerInfo: False

# -- This is the public instance.
# @default -- See values below ...
magnoliaPublic:
  enabled: True # -- Set to false if you don't need any public instances.
  restartPolicy: Always # Always use a leading slash.
  # -- If true, redeploy on "helm upgrade/install" even if no changes were made.
  redeploy: true
  # -- The context path of this Magnolia instance. Always use a leading slash.
  contextPath: /
  webarchive:
    # -- The docker image where to fetch compiled Magnolia libs from.
    repository: registry.gitlab.com/mironet/magnolia-demo
    # -- Do not use 'latest' in production.
    tag: latest
  # -- Extra sidecar containers added to the Magnolia pod.
  extraContainers: []
  # -- Extra init containers added to the Magnolia pod.
  extraInitContainers: []
  # -- Enable Groovy rescue console.
  rescueMode: False
  rescueModeDX: False
  stateful: True # Do not change this.
  # -- How many public instances to deploy.
  replicas: 1
  strategy:
    # -- Kubernetes rollout strategy on `helm upgrade ...`.
    type: Recreate
  # -- These key/value pairs will be added to CATALINA_OPTS.
  catalinaExtraEnv: {}
  setenv:
    memory:
      # -- Minimum amount allocated to heap as a percentage of the pod's
      # resources.
      minPercentage: 25
      # -- Maximum amount allocated to heap as a percentage of the pod's
      # resources.
      maxPercentage: 60
    update:
      # -- Auto-update Magnolia if repositories are empty (usually on the first
      # run).
      auto: "true"
  resources:
    requests:
      # -- Minimum amount of memory this pod requests.
      memory: 2Gi
    limits:
      # -- Maximum amount of memory this pod is allowed to use. This is not the
      # heap size, the heap size is smaller, see `setenv.memory` for details.
      memory: 2Gi
  logging:
    level: DEBUG
    pattern: "%d %-5p %-50.50c: %m%n"
  bootstrap:
    username: "superuser"
    password: ""
    # -- Verbatim content of the instructions for this instance. If empty use a
    # default. This is intended to be used with the --set-file flag of "helm
    # install".
    instructions: ""
    extraEnv: []
  redirects:
    # -- Enable redirect reverse proxy.
    enabled: False
  activation:
    privateKey: null
    publicKey: null
    # -- Set this to `true` in case you want to use an existing activation key
    # stored as a secret and provide its name.
    useExistingSecret: False
    keyLocation: /keys/activation/magnolia-activation-keypair.properties
    secret:
      name: my-activation-secret
      key: my-activation-secret-key # The name of they inside the secret to use.
  persistence:
    # -- Enable persistence for indexes, cache, tmp files. If this is enabled
    # the MGNL_HOME_DIR env var will be set and a volume will be mounted to the
    # default location unless it's specified here as mountPath.
    enabled: True
    # -- Existing volumes can be mounted into the container. If not specified,
    # helm will create a new PVC.
    existingClaim:
    # -- In case of local-path provisioners this is not enforced.
    size: "10Gi"
    mountPath: "/mgnl-home"
    # -- Empty string means: Use the default storage class.
    storageClassName: ""
  db:
    enabled: True
    repository: postgres
    tag: 11.9-alpine
    type: postgres
    name: public
    persistence:
      enabled: True
      size: "10Gi"
      volumePermissions: true # Fix volume permissions by chowning pvc to RunAsUser:fsGroup.
      # -- Mount point is /db, PGDATA=/db/data
      mountPath: "/db"
      # -- Mount point is /db, PGDATA=/db/data
      subPath: "data"
    jackrabbit:
      # -- Errors detected by a consistency check are automatically repaired. If false, errors are only written to the log.
      autoRepair: True
      # -- If set to true a consistency check is performed depending on the parameter forceConsistencyCheck.
      # If set to false no consistency check is performed on startup, even if a redo log had been applied.
      enableConsistencyCheck: False
      # -- Runs a consistency check on every startup. If false, a consistency check is only performed when the search index detects a prior forced shutdown.
      forceConsistencyCheck: False
      # -- If set to log, the process will just log the inconsistency during the re-indexing on startup.
      # If set to fail, the process will fail the re-indexing on startup.
      onWorkspaceInconsistency: log
      # -- Extra search index parameters for jackrabbit configuration (e.g. overwrite
      # search excerpt provider class with `excerptProviderClass`)
      extraSearchIndexParameters: {}
    backup:
      autoconfig:
        # -- Configures the backup for pg_wal automatically in a k8s
        # environment. It does this by including a configmap via the envFrom:
        # directive which will be injected into the pod. You can override or
        # pass other environment variables via the env: or the extraEnv:
        # directive below.
        enabled: False
        extraEnv: []
      image: "registry.gitlab.com/mironet/magnolia-backup"
      tag: "v0.7.4"
      # -- Enable db backup sidecar.
      enabled: False
      pg_wal_archive: "/archive"
      pg_wal_archive_size: "50Gi"
    restore:
      # -- Enable restore operations.
      enabled: False
      dump_url: https://s3...
      # -- URL to backup bundle JSON file to use for restore.
      bundle_url: https://s3...
      # -- Custom annotations added to db pods.
    podAnnotations: {}
    contentsync:
      # -- Enable content sync on public instances. Depends on the backup being
      # enabled and configured correctly for pg_wal log shipping.
      enabled: false
      # -- TLS port of the backup sidecar.
      address: ":9998"
  livenessProbe:
    enabled: True
    failureThreshold: 4
    periodSeconds: 10
    expectedCodes: "200-399,401,404"
    path: "/.rest/status"
  # -- Custom annotations added to pods.
  podAnnotations: {}
  # -- Additional JDNI resources to be added in tomcat's `server.xml`. The
  # key/value pairs will be mapped to xml.
  jndiResources: []
  # -- Tomcat configuration
  tomcat:
    # -- Log JVM arguments
    logArgs: False
    # -- Activate the websockets
    activateWebsockets: False
    # -- The maximum permitted size of the request line and headers associated with an HTTP request and response
    maxHttpHeaderSize: 8192
    # -- Error valve configuration
    error:
      # -- Show error report
      showReport: False
      # -- Show server info
      showServerInfo: False

# Additional jars which should be loaded into tomcat can be specified here.
jars:
  - name: postgres-jdbc
    # -- Example of additional jar, here the Postgres JDBC driver.
    repository: registry.gitlab.com/mironet/magnolia-jar/postgres-42.2.8
    tag: v0.0.2
    env:
      - name: INIT_DEST
        value: /app/magnolia/WEB-INF/lib
    # -- Where to find the init script which copies .jar files into tomcat/lib.
    initScript: /init.sh
  - name: jmx-exporter
    repository: registry.gitlab.com/mironet/magnolia-jar/jmx_prometheus_javaagent-0.13.0
    tag: v0.0.2
    env:
      - name: INIT_DEST
        value: /extraLibs/
    initScript: /init.sh
  - name: jjwt-jackson
    repository: registry.gitlab.com/mironet/magnolia-jar/jjwt-jackson-0.11.2
    tag: v0.0.2
    env:
      - name: INIT_DEST
        value: /app/magnolia/WEB-INF/lib
    initScript: /init.sh
  - name: jjwt-impl
    repository: registry.gitlab.com/mironet/magnolia-jar/jjwt-impl-0.11.2
    tag: v0.0.2
    env:
      - name: INIT_DEST
        value: /app/magnolia/WEB-INF/lib
    initScript: /init.sh
  - name: jjwt-api
    repository: registry.gitlab.com/mironet/magnolia-jar/jjwt-api-0.11.2
    tag: v0.0.2
    env:
      - name: INIT_DEST
        value: /app/magnolia/WEB-INF/lib
    initScript: /init.sh
  - name: magnolia-rest-security-core
    repository: registry.gitlab.com/mironet/magnolia-jar/magnolia-rest-security-core-1.0.3
    tag: v0.0.2
    env:
      - name: INIT_DEST
        value: /app/magnolia/WEB-INF/lib
    initScript: /init.sh
  - name: magnolia-cloud-bootstrapper
    repository: registry.gitlab.com/mironet/magnolia-jar/magnolia-cloud-bootstrapper-1.0.2
    tag: v0.0.2
    env:
      - name: INIT_DEST
        value: /app/magnolia/WEB-INF/lib
    initScript: /init.sh

metrics:
  # -- Enable JMX exporters.
  enabled: true
  setPrometheusAnnotations: true
  metricsServerPort: 8000

service:
  annotations: {}
  type: ClusterIP
  clusterIP: None
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8080
    # - name: spa
    #   port: 9090
    #   protocol: TCP
    #   targetPort: 9090
  redirectPort: 8081

ingress:
  # -- Enable/disable ingress configuration.
  enabled: False
  # -- Additional annotations for the ingress object.
  # @default -- {}
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: 512m
    # Use these if you want cert-manager to issue let's encrypt certs.
    #cert-manager.io/cluster-issuer: letsencrypt-prod
  # -- Specify hosts here as an array.
  hosts: []
    # - host: k8s.local
    #   paths:
    #     - path: /
    #       pathType: Prefix
    #       instance: author
    #       port: http # use a defined service name (see above --> service.ports.name)

  tls: []
    # # Specify hosts here if you want to use TLS.
    # - hosts:
    #   - k8s.local
    #   # # Specify a secret name here if you already have a cert stored in the
    #   # # and know its name. If this is not specified, let's encrypt will be used
    #   # # to issue a new certificate.
    #   # secretName: supersecret-cert

# Configuration for the bootstrapper. The idea is to fix the specific version
# tested with this chart.
postjob:
  # -- Where to get the bootstrapper from. This should not be changed under
  # normal circumstances.
  image: registry.gitlab.com/mironet/magnolia-bootstrap
  tag: v0.5.0
  imagePullPolicy: "IfNotPresent"
  waitFor: 10m

nodeSelector:
tolerations: