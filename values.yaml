# Default values for magnolia-helm.
# Declare variables to be passed into your templates.

image:
  tomcat:
    repository: tomcat
    tag: 9-jre11-slim
  pullSecrets: []
nameOverride: ""
fullnameOverride: ""

timezone: Europe/Zurich

deploy:
  directory: /usr/local/tomcat/webapps
  tempDir: /usr/local/tomcat/temp
  securityContext:
    runAsUser: 1000
    runAsGroup: 1000
    fsGroup: 1000

bootstrap:
  enabled: True

sharedDb:
  enabled: false
  workspaces: []
  db:
    enabled: True
    repository: postgres
    tag: 11.5-alpine
    type: postgres
    name: cluster
    persistence:
      enabled: True
      size: 10Gi
      # accessModes:
      #   - ReadWriteOnce

        # existingClaim: test  # Use this claim if you want to reuse an existing PVC.
    backup:
      enabled: False
      image: registry.gitlab.com/mironet/magnolia-backup
      tag: v0.2.1
      env:
        - name: MGNLBACKUP_CMD
          value: pg_basebackup
        - name: MGNLBACKUP_ARGS
          value: '--host localhost --user postgres -D /scratch -Fp'
        - name: MGNLBACKUP_USE_PG_WAL
          value: "true"
        - name: MGNLBACKUP_SYNC_DIR
          value: "/archive"
        - name: MGNLBACKUP_NO_STDOUT
          value: "true"
        - name: MGNLBACKUP_LOGLEVEL
          value: debug
        - name: MGNLBACKUP_BUCKET
          value: backup
        - name: MGNLBACKUP_PREFIX
          value: shareddb
        - name: MGNLBACKUP_HERITAGE
          value: magonlia-backup
        - name: MGNLBACKUP_CRON
          value: "@every 30d"
        - name: MGNLBACKUP_S3_ACCESSKEY
          valueFrom:
            secretKeyRef:
              name: s3-backup-key
              key: accesskey
        - name: MGNLBACKUP_S3_SECRETKEY
          valueFrom:
            secretKeyRef:
              name: s3-backup-key
              key: secretkey
        - name: MGNLBACKUP_S3_ENDPOINT
          value: minio:9000
        - name: MGNLBACKUP_CYCLE
          value: "90,0,0" # Use only days for WAL archiving.
    restore:
      enabled: False
      # # where to get the dump from
      # dump_url: https://s3...

# This is the author's configuration. It should not use H2 data base (the
# default).
magnoliaAuthor:
  restartPolicy: Always
  redeploy: false # Always redeploy on "helm upgrade/install" even if no changes were made.
  contextPath: /author # Always use a leading slash.
  webarchive:
    repository: registry.gitlab.com/mironet/magnolia-demo
    tag: latest
  extraContainers: []
  rescueMode: False
  strategy:
    type: Recreate
  setenv:
    memory:
      minPercentage: 25
      maxPercentage: 60
    update:
      auto: "true"
  resources:
    requests:
      memory: 512Mi
    limits:
      #cpu: 1000m
      memory: 512Mi
  logging:
    level: DEBUG
    pattern: "%d %-5p %-50.50c: %m%n"
  bootstrap:
    password: ""
  activation:
    privateKey: null
    publicKey: null
    # Set this to `true` in case you want to use an existing activation key
    # stored as a secret and provide its name.
    useExistingSecret: False
    keyLocation: /keys/activation/magnolia-activation-keypair.properties
    secret:
      name: my-activation-secret
      key: my-activation-secret-key # The name of they inside the secret to use.
  # Enable persistence for indexes, cache, tmp files. If this is enabled the
  # MGNL_HOME_DIR env var will be set and a volume will be mounted to the
  # default location unless it's specified here as mountPath.
  persistence:
    enabled: True
    # Existing volumes can be mounted into the container. If not specified, helm
    # will create a new PVC.
    existingClaim:
    size: 10Gi # In case of local-path provisioners this is not enforced.
    mountPath: /mgnl-home
    storageClassName: "" # Empty string is the default.
  db:
    enabled: True
    repository: postgres
    tag: 11.9-alpine
    type: postgres
    name: author
    persistence:
      enabled: True
      size: 10Gi
      # accessModes:
      #   - ReadWriteOnce

      # existingClaim: test  # Use this claim if you want to reuse an existing PVC.
    backup:
      enabled: False
      image: "registry.gitlab.com/mironet/magnolia-backup"
      tag: "v0.2.1"
      pg_wal_archive: "/archive"
      pg_wal_scratch: "/scratch"
      pg_wal_archive_size: "50Gi"
      env:
      - name: MGNLBACKUP_CMD
        value: "pg_basebackup"
      - name: MGNLBACKUP_ARGS
        value: "--host localhost --user postgres -D /scratch -Fp"
      - name: MGNLBACKUP_USE_PG_WAL
        value: "true"
      - name: MGNLBACKUP_SYNC_DIR
        value: "/archive"
      - name: MGNLBACKUP_NO_STDOUT
        value: "true"
      - name: MGNLBACKUP_LOGLEVEL
        value: "debug"
      - name: MGNLBACKUP_BUCKET
        value: "backup"
      - name: MGNLBACKUP_PREFIX
        value: "author"
      - name: MGNLBACKUP_HERITAGE
        value: "magnolia-backup"
      - name: MGNLBACKUP_CRON
        value: "@every 720h" # ~1 month.
      - name: MGNLBACKUP_S3_ACCESSKEY
        valueFrom:
          secretKeyRef:
            name: s3-backup-key
            key: accesskey
      - name: MGNLBACKUP_S3_SECRETKEY
        valueFrom:
          secretKeyRef:
            name: s3-backup-key
            key: secretkey
      - name: MGNLBACKUP_S3_ENDPOINT
        value: "minio:9000"
      - name: MGNLBACKUP_CYCLE
        value: "90,0,0" # Use only days for WAL archiving.
    restore:
      enabled: False
      # # where to get the dump from
      # dump_url: https://s3...

  livenessProbe:
    enabled: True
    failureThreshold: 4
    periodSeconds: 10
    expectedCodes: "200-399,401,404"

# This is the public instance. It can use the H2 data base, but it's also
# supported to use PostgreSQL / MySQL if needed.
magnoliaPublic:
  restartPolicy: Always # Always use a leading slash.
  redeploy: true # Always redeploy on "helm upgrade/install" even if no changes were made.
  contextPath: /
  webarchive:
    repository: registry.gitlab.com/mironet/magnolia-demo
    tag: latest
  rescueMode: False
  stateful: False # Use stateful public instances with embedded db (Magnolia enterprise feature).
  replicas: 2 # Only considered if stateful=true.
  strategy:
    type: Recreate
  setenv:
    memory:
      minPercentage: 25
      maxPercentage: 60
    update:
      auto: "true"
  resources:
    requests:
      memory: 512Mi
    limits:
      #cpu: 1000m
      memory: 512Mi
  logging:
    level: DEBUG
    pattern: "%d %-5p %-50.50c: %m%n"
  bootstrap:
    password: ""
  activation:
    privateKey: null
    publicKey: null
    # Set this to `true` in case you want to use an existing activation key
    # stored as a secret and provide its name.
    useExistingSecret: False
    keyLocation: /keys/activation/magnolia-activation-keypair.properties
    secret:
      name: my-activation-secret
      key: my-activation-secret-key # The name of they inside the secret to use.
  # Enable persistence for indexes, cache, tmp files. If this is enabled the
  # MGNL_HOME_DIR env var will be set and a volume will be mounted to the
  # default location unless it's specified here as mountPath.
  persistence:
    enabled: True
    # Existing volumes can be mounted into the container. If not specified, helm
    # will create a new PVC.
    existingClaim:
    size: "10Gi" # In case of local-path provisioners this is not enforced.
    mountPath: "/mgnl-home"
    storageClassName: "" # Empty string is the default.
  db:
    enabled: True # If false, use embedded H2 data base.
    repository: postgres
    tag: 11.9-alpine
    type: postgres
    name: public
    persistence:
      enabled: True
      size: "10Gi"
    backup:
      image: "registry.gitlab.com/mironet/magnolia-backup"
      tag: "v0.2.1"
      enabled: False
      pg_wal_archive: "/archive"
      pg_wal_scratch: "/scratch"
      pg_wal_archive_size: "50Gi"
    restore:
      enabled: False
      dump_url: https://s3...
  livenessProbe:
    enabled: True
    failureThreshold: 4
    periodSeconds: 10
    expectedCodes: "200-399,401,404"

# Additional jars which should be loaded into tomcat can be specified here.
jars:
  - name: postgres-jdbc
    repository: registry.gitlab.com/mironet/magnolia-jar/postgres-42.2.8
    tag: v0.0.1
    env:
      - name: INIT_DEST
        value: /app/magnolia/WEB-INF/lib
    initScript: /init.sh

service:
  annotations: {}
  type: ClusterIP
  clusterIP: None
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 8080
    # - name: spa
    #   port: 9090
    #   protocol: TCP
    #   targetPort: 9090

ingress:
  enabled: False
  annotations:
    nginx.ingress.kubernetes.io/proxy-body-size: 512m
    # Use these if you want cert-manager to issue let's encrypt certs.
    #cert-manager.io/cluster-issuer: letsencrypt-prod
  hosts: []
    # Specify hosts here as an array.
    # - host: k8s.local
    #   paths:
    #     - path: /
    #       instance: author
    #       port: http # can be changed to e.g. "9090"

  tls: []
    # # Specify hosts here if you want to use TLS.
    # - hosts:
    #   - k8s.local
    #   # # Specify a secret name here if you already have a cert stored in the
    #   # # and know its name. If this is not specified, let's encrypt will be used
    #   # # to issue a new certificate.
    #   # secretName: supersecret-cert

# Configuration for the bootstrapper. The idea is to fix the specific version
# tested with this chart.
postjob:
  image: registry.gitlab.com/mironet/magnolia-bootstrap
  tag: v0.2.1-rc1
  imagePullPolicy: "IfNotPresent"
  waitFor: 10m

resources: {}

nodeSelector: {}

affinity: {}
