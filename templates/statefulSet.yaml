{{- $fullName := include "magnolia.fullname" . -}}
{{- $chartName := include "magnolia.chart" . -}}
{{- $instances := dict "author" .Values.magnoliaAuthor "public" .Values.magnoliaPublic }}
{{- range $magnoliaMode, $value := $instances }}
{{- if $value.enabled }}
{{- $name := printf "%s-%s" $fullName $magnoliaMode }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ $name }}
  namespace: {{ $.Release.Namespace }}
  labels:
    {{- include "magnolia.labels" $ | nindent 4 }}
    tier: app
    component: {{ $magnoliaMode }}-instance
spec:
  serviceName: {{ $name }}-svc
  replicas: {{ eq $magnoliaMode "author" | ternary "1" $value.replicas }}
  selector:
    matchLabels:
      {{- include "magnolia.labels" $ | nindent 6 }}
      tier: app
      component: {{ $magnoliaMode }}-instance
  template:
    metadata:
      labels:
        {{- include "magnolia.labels" $ | nindent 8 }}
        tier: app
        component: {{ $magnoliaMode }}-instance
      annotations:
{{- if and $.Values.metrics.enabled $.Values.metrics.setPrometheusAnnotations }}
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ $.Values.metrics.metricsServerPort }}"
{{- end }}
        {{- if $value.redeploy }}
        timestamp: "{{ date "20060102150405" now }}"
        {{- end }}
        {{- range $key, $value := $value.podAnnotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
    spec:
      serviceAccountName: {{ $.Release.Name }}-bootstrapper-sa
      securityContext:
        {{- toYaml $.Values.deploy.securityContext | nindent 8 }}
      restartPolicy: {{ $value.restartPolicy | default "Always" }}
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  release: {{ $.Release.Name }}
                  tier: database
                  component: {{ $value.db.name }}
      volumes:
        - name: temp
          emptyDir: {}
        - name: magnolia-home
        {{- if and $value.persistence.enabled $value.persistence.existingClaim }}
          persistentVolumeClaim:
            claimName: {{ $value.persistence.existingClaim }}
        {{- else }}
          emptyDir: {}
        {{- end }}
        - name: tz-config
          hostPath:
            path: /usr/share/zoneinfo/{{ $.Values.timezone }}
        - name: app
          emptyDir: {}
        # This volume's name has to conform to the rules for a dns name.
        - name: extralibs
          emptyDir: {}
{{- if $.Values.metrics.enabled }}
        - name: jmx-exporter-config
          configMap:
            items:
            - key: jmx-exporter-config.yml
              mode: 420
              path: config.yml
            name: {{ $.Release.Name }}-configmap-public
            optional: False
{{- end }}
{{- if $value.db.enabled }}
        - name: jackrabbit-config
          configMap:
            items:
            - key: jackrabbit.xml
              mode: 420
              path: jackrabbit.xml
            name: {{ $.Release.Name }}-configmap-{{ $magnoliaMode }}
            optional: False
{{- if $.Values.sharedDb.enabled }}
        - name: jackrabbit-shared-config
          configMap:
            items:
              - key: jackrabbit-shared.xml
                mode: 420
                path: jackrabbit-shared.xml
            name: {{ $.Release.Name }}-configmap-{{ $magnoliaMode }}
            optional: False
        - name: jcr-repositories
          configMap:
            items:
              - key: jcr-repositories.xml
                mode: 420
                path: jcr-repositories.xml
            name: {{ $.Release.Name }}-configmap-{{ $magnoliaMode }}
            optional: False
{{- end }}
{{- if or .rescueMode .rescueModeDX }}
        - name: rescue-web-xml
          configMap:
            items:
              - key: rescue-web.xml
                mode: 420
                path: rescue-web.xml
            name: {{ $.Release.Name }}-configmap-{{ $magnoliaMode }}
            optional: False
{{- end }}
{{- end }}
        - name: log4j-config
          configMap:
            items:
              - key: log4j2.xml
                mode: 420
                path: log4j2.xml
            name: {{ $.Release.Name }}-configmap-{{ $magnoliaMode }}
            optional: False
        - name: setenv
          configMap:
            items:
            - key: setenv.sh
              mode: 420
              path: setenv.sh
            name: {{ $.Release.Name }}-configmap-{{ $magnoliaMode }}
            optional: False
        - name: server-xml
          configMap:
            items:
            - key: server.xml
              mode: 420
              path: server.xml
            name: {{ $.Release.Name }}-configmap-{{ $magnoliaMode }}
            optional: False
        - name: logging-properties
          configMap:
            items:
            - key: logging.properties
              mode: 420
              path: logging.properties
            name: {{ $.Release.Name }}-configmap-{{ $magnoliaMode }}
            optional: False
{{- if eq $magnoliaMode "author" }}
        - name: activation-keypair
          emptyDir: {}
{{- end }}
      initContainers:
        - name: war
          image: {{ $value.webarchive.repository }}:{{ $value.webarchive.tag }}
          imagePullPolicy: {{ $.Values.image.pullPolicy }}
          command: ["sh", "-c", "cp -a /magnolia /app/"]
          volumeMounts:
            - name: tz-config
              mountPath: /etc/localtime
            - name: app
              mountPath: /app
        {{- range $.Values.jars }}
        - name: {{ .name }}
          image: {{ .repository }}:{{ .tag }}
          command:
            - {{ .initScript }}
          volumeMounts:
            - name: tz-config
              mountPath: /etc/localtime
            - name: app
              mountPath: /app
            - name: extralibs
              mountPath: /extraLibs
          {{- with .env }}
          env:
            {{- toYaml . | nindent 12 }}
          {{- end -}}
        {{- end }}
        {{- with .extraInitContainers }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        - name: dyn-dbconfig
          image: {{ printf "%s:%s" $.Values.postjob.image $.Values.postjob.tag }}
          imagePullPolicy: {{ $.Values.postjob.imagePullPolicy }}
          command:
            - /app
            - template
            - -i
            - /data/jackrabbit.xml
            - -o
            - /magnolia/magnolia/WEB-INF/config/repo-conf/jackrabbit.xml
          volumeMounts:
            - name: jackrabbit-config
              mountPath: /data/jackrabbit.xml
              subPath: jackrabbit.xml
            - name: app
              mountPath: /magnolia
        - name: waitfor-db
          image: {{ printf "%s:%s" $.Values.postjob.image $.Values.postjob.tag }}
          imagePullPolicy: {{ $.Values.postjob.imagePullPolicy }}
          {{- $dbHost := printf "%s-%s-db" $fullName $value.db.name }}
          command:
            - /app
            - waitfor
            - --names
            - {{ $dbHost }}-{{ "{{ .Env.HOSTNAME | podordinal }}" }}.{{ $dbHost }}
{{- if eq $magnoliaMode "author" }}
        - name: prepare-activation-keypair
          image: {{ printf "%s:%s" $.Values.postjob.image $.Values.postjob.tag }}
          imagePullPolicy: {{ $.Values.postjob.imagePullPolicy }}
          command:
            - /app
            - activationkey
            - --activation-keypair-path
            - "{{ .activation.keyLocation | dir }}"
          volumeMounts:
            - name: activation-keypair
              mountPath: {{ .activation.keyLocation | dir }}
          env:
            - name: MGNLBOOT_PUBLIC_SERVICE_NAME
              value: {{ printf "%s-%s-svc" $fullName "public" }}
            - name:  MGNLBOOT_ACTIVATION_SECRET_NAME
            {{- if and (not .activation.useExistingSecret) .activation.privateKey }}
              value: {{ printf "%s-activation-secret" $.Release.Name }}
            {{- else if .activation.useExistingSecret }}
              value: {{ .activation.secret.name | quote }}
            {{- else }}
              value: {{ printf "%s-default-activation-secret" $.Release.Name }}
            {{- end }}
            - name: MGNLBOOT_ACTIVATION_SECRET_KEY
            {{- if .activation.useExistingSecret }}
              value: {{ .activation.secret.key | quote }}
            {{- end }}
{{- end }}
        - name: create-auth-key
          image: {{ printf "%s:%s" $.Values.postjob.image $.Values.postjob.tag }}
          imagePullPolicy: {{ $.Values.postjob.imagePullPolicy }}
          command:
            - /app
            - createauthkey
            - --public-key-path
            - "{{ $value.persistence.mountPath | default "/mgnl-home" }}/pub.pem"
          volumeMounts:
            - name: magnolia-home
              mountPath: {{ $value.persistence.mountPath | default "/mgnl-home" }}
          env:
            - name: MGNLBOOT_PUBLIC_SERVICE_NAME
              value: {{ printf "%s-%s-svc" $fullName "public" }}
      containers:
        - name: {{ $.Release.Name }}
          image: {{ $.Values.image.tomcat.repository }}:{{ $.Values.image.tomcat.tag }}
          imagePullPolicy: {{ $.Values.image.tomcat.pullPolicy }}
        {{- with $value.resources }}
          resources:
          {{- toYaml . | nindent 12 }}
        {{- end }}
          env:
        {{- with $value.env }}
          {{- toYaml . | nindent 10 }}
        {{- end }}
          envFrom:
            - configMapRef:
                name: {{ printf "%s-configmap-%s" $.Release.Name $magnoliaMode }}
                optional: false
          volumeMounts:
            - name: temp
              mountPath: {{ $.Values.deploy.tempDir }}
            - name: tz-config
              mountPath: /etc/localtime
            - name: magnolia-home
              mountPath: {{ $value.persistence.mountPath | default "/mgnl-home" }}
            - name: app
              mountPath: {{ $.Values.deploy.directory }}
            - name: extralibs
              mountPath: {{ $.Values.deploy.extraLibs }}
{{- if .db.enabled }}
{{- if or .rescueMode .rescueModeDX }}
            - name: rescue-web-xml
              mountPath: /usr/local/tomcat/webapps/magnolia/WEB-INF/web.xml
              subPath: rescue-web.xml
{{- end }}
{{- if $.Values.sharedDb.enabled }}
            - name: jackrabbit-shared-config
              mountPath: /usr/local/tomcat/webapps/magnolia/WEB-INF/config/repo-conf/jackrabbit-shared.xml
              subPath: jackrabbit-shared.xml
            - name: jcr-repositories
              mountPath: /usr/local/tomcat/webapps/magnolia/WEB-INF/config/default/repositories.xml
              subPath: jcr-repositories.xml
{{- end }}
{{- end }}
            - name: log4j-config
              mountPath: /usr/local/tomcat/webapps/magnolia/WEB-INF/config/default/log4j2.xml
              subPath: log4j2.xml
            - name: setenv
              mountPath: /usr/local/tomcat/bin/setenv.sh
              subPath: setenv.sh
            - name: server-xml
              mountPath: /usr/local/tomcat/conf/server.xml
              subPath: server.xml
            - name: logging-properties
              mountPath: /usr/local/tomcat/conf/logging.properties
              subPath: logging.properties
            - name: jmx-exporter-config
              mountPath: /jmxexporter/config.yml
              subPath: config.yml
{{- if eq $magnoliaMode "author" }}
            - name: activation-keypair
              mountPath: {{ .activation.keyLocation | dir }}
{{- end }}
        - name: bootstrapper
          image: {{ printf "%s:%s" $.Values.postjob.image $.Values.postjob.tag }}
          imagePullPolicy: {{ $.Values.postjob.imagePullPolicy }}
          command:
            - /app
            - serve
            - -m
            - http://localhost:8080{{ $value.contextPath }}
            - --code
            - "{{ $value.livenessProbe.expectedCodes }}"
            {{- if $.Values.bootstrap.enabled }}
            - --path
            - "{{ .livenessProbe.path }}"
            - --magnolia-auth-secret-name
            - magnolia-auth-key
            {{- end }}
            #- -vvv  # Trace mode.
          volumeMounts:
            - name: app
              mountPath: /magnolia
            {{- if $.Values.bootstrap.enabled }}
            - name: magnolia-home
              mountPath: {{ $value.persistence.mountPath | default "/mgnl-home" }}
            {{- end }}
          env:
          {{- if $.Values.bootstrap.enabled }}
          - name: MGNLBOOT_SUPERUSER_NAME
            value: {{ $value.bootstrap.username }}
          - name: MGNL_CONTEXT_PATH
            value: {{ $value.contextPath }}
          - name: MGNLBOOT_AUTHOR_INSTANCE
            value: {{ printf "http://%s-%s-svc:8080%s" $fullName "author" $.Values.magnoliaAuthor.contextPath }}
          - name: MGNLBOOT_PUBLIC_SERVICE_NAME
            value: {{ printf "%s-%s-svc" $fullName "public" }}
          - name: MGNL_PODNAME
            value: {{ $name }}
          {{- if $value.base_url }}
          - name: MGNL_DEFAULT_BASE_URL
            value: {{ $value.base_url | quote }}
          {{- end }}
          - name: MGNLBOOT_ACTIVATION_SECRET_NAME
          {{- if and (not .activation.useExistingSecret) .activation.privateKey }}
            value: {{ printf "%s-activation-secret" $.Release.Name }}
          {{- else if .activation.useExistingSecret }}
            value: {{ .activation.secret.name | quote }}
          {{- else }}
            value: {{ printf "%s-default-activation-secret" $.Release.Name }}
          {{- end }}
          - name: MGNLBOOT_ACTIVATION_SECRET_KEY
          {{- if .activation.useExistingSecret }}
            value: {{ .activation.secret.key | quote }}
          {{- end }}
          {{- if $value.bootstrap.extraEnv }}
          {{- toYaml $value.bootstrap.extraEnv | nindent 10 }}
          {{- end }}
          {{- end }}
          ports:
            - name: "liveness-port"
              containerPort: 8765
          {{- if $value.livenessProbe.enabled }}
          {{- $contextPath := $value.contextPath }}
          {{- with $value.livenessProbe }}
          livenessProbe:
            httpGet:
              path: /livez
              port: "liveness-port"
            failureThreshold: {{ .failureThreshold | default 4 }}
            periodSeconds: {{ .periodSeconds | default 30 }}
            timeoutSeconds: {{ .timeoutSeconds | default 10 }}
            initialDelaySeconds: {{ .initialDelaySeconds | default 240 }}
          {{- end }}
          {{- end }}
          readinessProbe:
            httpGet:
              path: /readyz
              port: "liveness-port"
            initialDelaySeconds: 2
            periodSeconds: 2
            timeoutSeconds: 1
            successThreshold: 1
        {{- with $value.extraContainers }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    {{- if $.Values.image.pullSecrets }}
      imagePullSecrets:
      {{- toYaml $.Values.image.pullSecrets | nindent 8 }}
    {{- end }}
    {{- if $.Values.nodeSelector }}
      nodeSelector:
      {{- toYaml $.Values.nodeSelector | nindent 8 }}
    {{- end }}
    {{- if $.Values.tolerations }}
      tolerations:
      {{- toYaml $.Values.tolerations | nindent 8 }}
    {{- end }}
  volumeClaimTemplates:
    {{- if $value.persistence.enabled }}
    - spec:
        resources:
          requests:
            storage: {{ $value.persistence.size | default "10Gi" }}
        storageClassName: {{ $value.persistence.storageClassName | default "" }}
        accessModes:
          - ReadWriteOnce
      metadata:
        name: magnolia-home
        labels:
          {{- include "magnolia.labels" $ | nindent 10 }}
          tier: app
          component: {{ $magnoliaMode }}-instance
    {{- end }}
{{- end }}
{{- end }}
