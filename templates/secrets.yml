{{- $fullName := include "magnolia.fullname" . -}}
{{- $chartName := include "magnolia.chart" . -}}
{{- $name := $fullName -}}
{{- $labels := include "magnolia.labels" . -}}
{{- $data := include "magnolia.labels" . -}}
{{- $instanceList := list (dict "mode" "public" "values" .Values.magnoliaPublic) -}}
{{- if .Values.magnoliaAuthor.enabled }}
{{- $instanceList = list (dict "mode" "author" "values" .Values.magnoliaAuthor) (dict "mode" "public" "values" .Values.magnoliaPublic) -}}
{{- end }}
{{- range $instanceList -}}
{{- $magnoliaMode := .mode -}}
{{- if $.Values.bootstrap.enabled -}}
{{- $bootstrapUserSecretName := printf "%s-%s-%s" $.Release.Name "secret-superuser" $magnoliaMode }}
{{- $bootstrapuserSecret := lookup "v1" "Secret" $.Release.Namespace $bootstrapUserSecretName }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ $bootstrapUserSecretName }}
  namespace: {{ $.Release.Namespace }}
  labels:
{{ $labels | indent 4 }}
type: Opaque
data:
{{- if $bootstrapuserSecret }}
  password: {{ $bootstrapuserSecret.data.password }}
{{- else }}
  password: {{ if .values.bootstrap.password }}{{ .values.bootstrap.password | b64enc | quote }}{{ else }}{{ randAlphaNum 40 | b64enc | quote }}{{ end }}
{{- end }}
{{- end }}
{{- if eq $magnoliaMode "author" }}
{{- if and (not .values.activation.useExistingSecret) .values.activation.privateKey }}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ printf "%s-activation-secret" $.Release.Name }}
  namespace: {{ $.Release.Namespace }}
  labels:
{{ $labels | indent 4 }}
type: Opaque
stringData:
  magnolia-activation-keypair.properties: |-
    key.private={{ required "Please provide a valid RSA private key (1024 bit)!" .values.activation.privateKey }}
    key.public={{ required "Please provide a valid RSA public key (1024 bit)!" .values.activation.publicKey }}
{{- end }}
{{ end -}}
{{- end }}
