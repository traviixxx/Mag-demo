{{- $fullName := include "magnolia.fullname" . -}}
{{- $chartName := include "magnolia.chart" . -}}
{{- range list (dict "mode" "author" "values" .Values.magnoliaAuthor) (dict "mode" "public" "values" .Values.magnoliaPublic) -}}
{{- $magnoliaMode := .mode -}}
{{- $name := printf "%s-%s" $fullName $magnoliaMode -}}
{{- $dbName := printf "%s-db" $name -}}
{{- $appVolumeName := printf "%s-app-volume" $name -}}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $name }}
  namespace: {{ $.Release.Namespace }}
  labels:
    app: {{ $name }}
    chart: {{ $chartName }}
    release: {{ $.Release.Name }}
    heritage: {{ $.Release.Service }}
spec:
  selector:
    matchLabels:
      app: {{ $name }}
      release: {{ $.Release.Name }}
  strategy:
    {{ toYaml .values.strategy | indent 4 }}
  template:
    metadata:
      labels:
        app: {{ $name }}
        release: {{ $.Release.Name }}
      annotations:
        timestamp: "{{ date "20060102150405" now }}"
    spec:
      restartPolicy: {{ .values.restartPolicy | default "Always" }}
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: "kubernetes.io/hostname"
              labelSelector:
                matchLabels:
                  app: {{ $dbName }}
                  release: {{ $.Release.Name }}
      volumes:
        - name: tz-config
          hostPath:
            path: /usr/share/zoneinfo/{{ $.Values.timezone }}
        - name: {{ $appVolumeName }}
          emptyDir: {}
{{- if .values.db.enabled }}
        - name: jackrabbit-config
          configMap:
            items:
            - key: jackrabbit.xml
              mode: 420
              path: jackrabbit.xml
            name: {{ $.Release.Name }}-configmap-{{ $magnoliaMode }}
            optional: False
{{- if $.Values.sharedDb.enabled }}
        - name: jackrabbit-shared-config
          configMap:
            items:
              - key: jackrabbit-shared.xml
                mode: 420
                path: jackrabbit-shared.xml
            name: {{ $.Release.Name }}-configmap-{{ $magnoliaMode }}
            optional: False
        - name: jcr-repositories
          configMap:
            items:
              - key: jcr-repositories.xml
                mode: 420
                path: jcr-repositories.xml
            name: {{ $.Release.Name }}-configmap-{{ $magnoliaMode }}
            optional: False
{{- end }}
{{- if .values.rescueMode }}
        - name: rescue-web-xml
          configMap:
            items:
              - key: rescue-web.xml
                mode: 420
                path: rescue-web.xml
            name: {{ $.Release.Name }}-configmap-{{ $magnoliaMode }}
            optional: False
{{- end }}
{{- end }}
        - name: log4j-config
          configMap:
            items:
              - key: log4j2.xml
                mode: 420
                path: log4j2.xml
            name: {{ $.Release.Name }}-configmap-{{ $magnoliaMode }}
            optional: False
        - name: setenv
          configMap:
            items:
            - key: setenv.sh
              mode: 420
              path: setenv.sh
            name: {{ $.Release.Name }}-configmap-{{ $magnoliaMode }}
            optional: False
        - name: server-xml
          configMap:
            items:
            - key: server.xml
              mode: 420
              path: server.xml
            name: {{ $.Release.Name }}-configmap-{{ $magnoliaMode }}
            optional: False
        - name: logging-properties
          configMap:
            items:
            - key: logging.properties
              mode: 420
              path: logging.properties
            name: {{ $.Release.Name }}-configmap-{{ $magnoliaMode }}
            optional: False
{{- if eq $magnoliaMode "author" }}
{{- if and (not .values.activation.useExistingSecret) .values.activation.privateKey }}
        - name: activation-keypair
          secret:
            secretName: {{ printf "%s-activation-secret" $.Release.Name }}
            defaultMode: 420
            optional: false
            items:
              - key: magnolia-activation-keypair.properties
                path: magnolia-activation-keypair.properties
{{- else if .values.activation.useExistingSecret }}
        - name: activation-keypair
          secret:
            secretName: {{ .values.activation.secret.name | quote }}
            defaultMode: 420
            optional: false
            items:
              - key: {{ .values.activation.secret.key | quote }}
                path: magnolia-activation-keypair.properties
{{- else }}
        - name: activation-keypair
          emptyDir: {}
{{- end }}
{{- end }}
        {{- if $.Values.bootstrap.enabled }}
        - name: instructions
          configMap:
            items:
            - key: instructions.yml
              mode: 420
              path: instructions.yml
            name: {{ printf "%s-bootstrap-%s" $.Release.Name $magnoliaMode }}
            optional: False
        {{- end }}
      initContainers:
        - name: war
          image: {{ .values.webarchive.repository }}:{{ .values.webarchive.tag }}
          imagePullPolicy: {{ $.Values.image.pullPolicy }}
          command: ["sh", "-c", "cp -a /magnolia /app/"]
          volumeMounts:
            - name: tz-config
              mountPath: /etc/localtime
            - name: {{ $appVolumeName }}
              mountPath: /app
        - name: bootstrapper
          image: {{ printf "%s:%s" $.Values.postjob.image $.Values.postjob.tag }}
          imagePullPolicy: Always
          command: ["sh", "-c", "cp -a /app /magnolia/bootstrap"]
          volumeMounts:
            - name: {{ $appVolumeName }}
              mountPath: /magnolia
{{- range $.Values.jars }}
        - name: {{ .name }}
          image: {{ .repository }}:{{ .tag }}
          command:
            - {{ .initScript }}
          volumeMounts:
            - name: tz-config
              mountPath: /etc/localtime
            - name: {{ $appVolumeName }}
              mountPath: /app
{{- with .env }}
          env:
{{ toYaml . | indent 12 }}
{{- end -}}
{{- end }}
        - name: waitfor-db
          image: busybox:1.31
          command: ['sh', '-c', "until nslookup {{ $dbName }}.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for db; sleep 2; done"]
{{- if eq $magnoliaMode "public" }}
        - name: waitfor-author
          image: busybox:1.31
          command: ['sh', '-c', "until nslookup {{ printf "%s-author-svc" $fullName }}.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for author; sleep 2; done"]
{{- end }}
      containers:
        {{- with .values.extraContainers }}
{{ toYaml . | indent 8 }}
        {{- end }}
        - name: {{ $.Chart.Name }}
          image: {{ $.Values.image.tomcat.repository }}:{{ $.Values.image.tomcat.tag }}
          imagePullPolicy: {{ $.Values.image.pullPolicy }}
{{- with .values.resources }}
          resources:
{{ toYaml . | indent 12 }}
{{- end }}
          env:
{{- with .values.env }}
{{ toYaml . | indent 10 }}
{{- end }}
          {{- if $.Values.bootstrap.enabled }}
          - name: MGNLBOOT_NEW_SUPERUSER_PW
            valueFrom:
              secretKeyRef:
                key: password
                name: {{ printf "%s-%s-%s" $.Release.Name "secret-superuser" $magnoliaMode }}
          - name: MGNLBOOT_AUTHOR_SUPERUSER_PW
            valueFrom:
              secretKeyRef:
                key: password
                name: {{ printf "%s-%s-%s" $.Release.Name "secret-superuser" "author" }}
          - name: MGNLBOOT_AUTHOR_INSTANCE
            value: {{ printf "http://%s-%s-svc:8080%s" $fullName "author" .values.contextPath }}
          - name: MGNLBOOT_PUBLIC_INSTANCE
            value: {{ printf "http://%s-%s-svc:8080%s" $fullName "public" .values.contextPath }}
          - name: MGNL_PODNAME
            value: {{ $name }}
          {{- if .values.base_url }}
          - name: MGNL_DEFAULT_BASE_URL
            value: {{ .values.base_url | quote }}
          {{- end }}
          {{- if .values.activation.useExistingSecret }}
          - name: MGNL_ACTIVATION_PUBKEY
            valueFrom:
              secretKeyRef:
                name:  {{ .values.activation.secret.name | quote }}
                key:  {{ .values.activation.secret.key| quote }}
          {{- end }}
          {{- end }}
          envFrom:
            - configMapRef:
                name: {{ printf "%s-configmap-%s" $.Release.Name $magnoliaMode }}
                optional: false
          {{- if $.Values.bootstrap.enabled }}
          lifecycle:
            postStart:
              exec:
                command:
                  - {{ $.Values.deploy.directory }}/bootstrap
                  - boot
                  - -w
                  - 3m
                  - -m
                  - http://localhost:8080{{ .values.contextPath }}
                  - -i
                  - /data/instructions.yml
                  - --allow-fail-401
                  - -vv
          {{- end }}
          volumeMounts:
            - name: tz-config
              mountPath: /etc/localtime
            - name: {{ $appVolumeName }}
              mountPath: {{ $.Values.deploy.directory }}
{{- if .values.db.enabled }}
            - name: jackrabbit-config
              mountPath: /usr/local/tomcat/webapps/magnolia/WEB-INF/config/repo-conf/jackrabbit.xml
              subPath: jackrabbit.xml
{{- if .values.rescueMode }}
            - name: rescue-web-xml
              mountPath: /usr/local/tomcat/webapps/magnolia/WEB-INF/web.xml
              subPath: rescue-web.xml
{{- end }}
{{- if $.Values.sharedDb.enabled }}
            - name: jackrabbit-shared-config
              mountPath: /usr/local/tomcat/webapps/magnolia/WEB-INF/config/repo-conf/jackrabbit-shared.xml
              subPath: jackrabbit-shared.xml
            - name: jcr-repositories
              mountPath: /usr/local/tomcat/webapps/magnolia/WEB-INF/config/default/repositories.xml
              subPath: jcr-repositories.xml
{{- end }}
{{- end }}
            - name: log4j-config
              mountPath: /usr/local/tomcat/webapps/magnolia/WEB-INF/config/default/log4j2.xml
              subPath: log4j2.xml
            - name: setenv
              mountPath: /usr/local/tomcat/bin/setenv.sh
              subPath: setenv.sh
            - name: server-xml
              mountPath: /usr/local/tomcat/conf/server.xml
              subPath: server.xml
            - name: logging-properties
              mountPath: /usr/local/tomcat/conf/logging.properties
              subPath: logging.properties
{{- if eq $magnoliaMode "author" }}
            - name: activation-keypair
              {{- if and (not .values.activation.useExistingSecret) (empty .values.activation.privateKey) }}
              mountPath: {{ .values.activation.keyLocation | dir }}
              {{- else }}
              mountPath: {{ .values.activation.keyLocation }}
              {{- end}}
              subPath: magnolia-activation-keypair.properties
{{- end }}
            {{- if $.Values.bootstrap.enabled }}
            - name: instructions
              mountPath: /data/instructions.yml
              subPath: instructions.yml
            {{- end }}
          {{- if .values.livenessProbe.enabled }}
          {{- $contextPath := .values.contextPath }}
          {{- with .values.livenessProbe }}
          livenessProbe:
            exec:
              command: [ "{{ $.Values.deploy.directory }}/bootstrap", "httpget", "http://localhost:8080{{ $contextPath }}", "--code", "{{ default "200-399,401,404" .expectedCodes }}", "-vv" ]
            failureThreshold: {{ .failureThreshold | default 4 }}
            periodSeconds: {{ .periodSeconds | default 30 }}
            timeoutSeconds: {{ .timeoutSeconds | default 10 }}
            initialDelaySeconds: {{ .initialDelaySeconds | default 240 }}
          {{- end }}
          {{- end }}
{{- if eq $magnoliaMode "author" }}
          readinessProbe:
            exec:
              command: [ "{{ $.Values.deploy.directory }}/bootstrap", "httpget", "http://localhost:8080{{ .values.contextPath }}", "--code", "200-399,401", "-vv" ]
            initialDelaySeconds: 2
            #periodSeconds: 120
            timeoutSeconds: 2
            successThreshold: 3
{{- end }}
{{- with .values.startupProbe }}
{{- end }}
    {{- if $.Values.image.pullSecrets }}
      imagePullSecrets:
{{ toYaml $.Values.image.pullSecrets | indent 8 }}
    {{- end }}
    {{- if $.Values.nodeSelector }}
      nodeSelector:
{{ toYaml $.Values.nodeSelector | indent 8 }}
    {{- end }}
    {{- if $.Values.tolerations }}
      tolerations:
{{ toYaml $.Values.tolerations | indent 8 }}
    {{- end }}
{{ end -}}
