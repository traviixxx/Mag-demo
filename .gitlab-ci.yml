variables: {}

stages:
  - lint
  - test
  - deploy

.test_before: &test_before
    - export GIT_TAG=$(git describe --always --tags)
    - export CHART_VERSION=$GIT_TAG
    - mkdir tmp || true

.test_gomplate: &test_gomplate
    - cat test-values/${RELEASE}.yml | gomplate > test-values/${RELEASE}.yaml
    - cat test-values/${RELEASE}.yaml

.test_after: &test_after
    - helm del ${RELEASE} || true
    - kubectl get pods -l component=test -l app.kubernetes.io/instance=${RELEASE} -o json | kubectl delete -f - || true
    - kubectl get persistentvolumeclaims -l "release=${RELEASE}" -o json | kubectl delete -f - || true

lint:
  stage: lint
  image:
    name: registry.gitlab.com/mironet/helm-kubectl-gomplate
    entrypoint: [""]
  before_script:
    - *test_before
  script:
    - helm lint

prep-syntax-check:
  stage: lint
  image:
    name: registry.gitlab.com/mironet/helm-kubectl-gomplate
    entrypoint: [""]
  before_script:
    - *test_before
  script:
    - for i in `ls test-values/*.yml`; do echo $i; cat $i | gomplate | helm template test . --values - > tmp/$(basename -- $i); done
  artifacts:
    paths:
      - tmp/*.yml
    expire_in: 15 days

syntax-check:
  stage: test
  dependencies:
    - prep-syntax-check
  image:
    name: garethr/kubeval:0.15.0
    entrypoint: [""]
  script:
    - for i in `ls tmp/*.yml`; do echo $i; cat $i | kubeval --ignore-missing-schemas; done

# test-simple:
#   stage: test
#   image:
#     name: registry.gitlab.com/mironet/helm-kubectl-gomplate
#     entrypoint: [""]
#   before_script:
#     - export RELEASE=simple
#     - *test_before
#     - *test_gomplate
#   script:
#     # Remove old stuff if it's still running.
#     - *test_after
#     - helm upgrade --install ${RELEASE} . -f test-values/base.yml -f test-values/${RELEASE}.yaml
#     - helm test --logs ${RELEASE}
#   environment:
#     name: simple/$CI_COMMIT_REF_NAME
#     url: https://$CI_COMMIT_REF_SLUG.simple.magnolia-helm.mirohost.ch
#     on_stop: stop-test-simple
#     auto_stop_in: 1 days
#   only:
#     - master
#   allow_failure: true

# stop-test-simple:
#   stage: test
#   image: registry.gitlab.com/mironet/helm-kubectl-gomplate
#   environment:
#       name: simple/$CI_COMMIT_REF_NAME
#       action: stop
#   before_script:
#     - export RELEASE=simple
#   script:
#     - *test_after
#   when: manual
#   only:
#     - master
#   allow_failure: true

# test-full:
#   stage: test
#   image:
#     name: registry.gitlab.com/mironet/helm-kubectl-gomplate
#     entrypoint: [ "" ]
#   before_script:
#     - export RELEASE=full
#     - *test_before
#     - *test_gomplate
#   script:
#     # Remove old stuff if it's still running.
#     - *test_after
#     - helm upgrade --install ${RELEASE} . -f test-values/base.yml -f test-values/${RELEASE}.yaml
#     - helm test --logs ${RELEASE}
#   environment:
#     name: full/$CI_COMMIT_REF_NAME
#     url: https://$CI_COMMIT_REF_SLUG.full.magnolia-helm.mirohost.ch
#     on_stop: stop-test-full
#     auto_stop_in: 1 days
#   only:
#     - master
#   allow_failure: true

# stop-test-full:
#   stage: test
#   image: registry.gitlab.com/mironet/helm-kubectl-gomplate
#   environment:
#       name: full/$CI_COMMIT_REF_NAME
#       action: stop
#   before_script:
#     - export RELEASE=full
#   script:
#     - *test_after
#   when: manual
#   only:
#     - master
#   allow_failure: true

upload:
  stage: deploy
  image:
    name: registry.gitlab.com/mironet/helm-kubectl-gomplate
    entrypoint: [""]
  before_script:
    - apk add curl
    - *test_before
  script:
    - helm dep build
    - helm package . --version ${CHART_VERSION}
    - curl -f -u "$CHARTMUSEUM_USER:$CHARTMUSEUM_PASS" --data-binary @magnolia-helm-${CHART_VERSION}.tgz https://charts.mirohost.ch/api/charts
  only:
    - tags
